Script started on 2018-11-21 23:16:55-05:00
[1m[3m%[23m[1m[0m                                                                               k..hanronn/Lab10\[0m[23m[24m[JÎ» ~/coding/csc209/chanronn/Lab10/ [32mmaster*[00m [00m[K[?1h=[?2004hggdb bufserver.bufserver[9D/bufserver[9D[?1l>[?2004l
kgdb\GNU gdb (GDB) Fedora 8.2-3.fc29
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-redhat-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from ./bufserver...done.
(gdb) break set_up_server_sockt[Ket
Breakpoint 1 at 0x4014b0: file socket.c, line 36.
(gdb) n
The program is not being run.
(gdb) ur[K[Krun
Starting program: /home/chyran/coding/csc209/chanronn/Lab10/bufserver 
Missing separate debuginfos, use: dnf debuginfo-install glibc-2.28-17.fc29.x86_64

Breakpoint 1, set_up_server_socket (self=0x405260, num_queue=5) at socket.c:36
36	    int soc = socket(PF_INET, SOCK_STREAM, 0);
(gdb) n
37	    if (soc < 0) {
(gdb) n
44	    int on = 1;
(gdb) n
45	    int status = setsockopt(soc, SOL_SOCKET, SO_REUSEADDR,
(gdb) n
47	    if (status < 0) {
(gdb) n
53	    if (bind(soc, (struct sockaddr *)self, sizeof(*self)) < 0) {
(gdb) n
60	    if (listen(soc, num_queue) < 0) {
(gdb) n
66	    return soc;
(gdb) n
67	}
(gdb) n
main () at bufserver.c:27
27	        int fd = accept_connection(listenfd);
(gdb) n
Waiting for a new connection...
New connection accepted from 127.0.0.1:58908
28	        if (fd < 0) {
(gdb) n
33	        char buf[BUFSIZE] = {'\0'};
(gdb) n
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) n
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) n
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) n
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) n
74	                inbuf = inbuf - where;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
77	            after = (buf + inbuf);
(gdb) n
78	            room =  sizeof(buf) - inbuf;
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) n
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) n
74	                inbuf = inbuf - where;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
77	            after = (buf + inbuf);
(gdb) n
78	            room =  sizeof(buf) - inbuf;
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) n
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) n
74	                inbuf = inbuf - where;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
77	            after = (buf + inbuf);
(gdb) n
78	            room =  sizeof(buf) - inbuf;
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) n
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) n
74	                inbuf = inbuf - where;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
77	            after = (buf + inbuf);
(gdb) n
78	            room =  sizeof(buf) - inbuf;
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) n
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) n
74	                inbuf = inbuf - where;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
77	            after = (buf + inbuf);
(gdb) n
78	            room =  sizeof(buf) - inbuf;
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
81	        close(fd);
(gdb) n
27	        int fd = accept_connection(listenfd);
(gdb) n
Waiting for a new connection...
n
exit
New connection accepted from 127.0.0.1:58910
28	        if (fd < 0) {
(gdb) n
33	        char buf[BUFSIZE] = {'\0'};
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) n
34	        int inbuf = 0;           // How many bytes currently in buffer?
(gdb) n
35	        int room = sizeof(buf);  // How many bytes remaining in buffer?
(gdb) n
36	        char *after = buf;       // Pointer to position after the data in buf
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) n
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) n
74	                inbuf = inbuf - where;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
77	            after = (buf + inbuf);
(gdb) n
78	            room =  sizeof(buf) - inbuf;
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) n
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) n
74	                inbuf = inbuf - where;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
77	            after = (buf + inbuf);
(gdb) n
78	            room =  sizeof(buf) - inbuf;
(gdb) n
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
41	            inbuf += nbytes;
(gdb) n
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) n
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) n
60	                printf("Next message: %s\n", buf);
(gdb) n
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) n
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) 
74	                inbuf = inbuf - where;
(gdb) 
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
77	            after = (buf + inbuf);
(gdb) 
78	            room =  sizeof(buf) - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) 
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) 
74	                inbuf = inbuf - where;
(gdb) 
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
77	            after = (buf + inbuf);
(gdb) 
78	            room =  sizeof(buf) - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
41	            inbuf += nbytes;
(gdb) 
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
58	                buf[where - 2] = '\0'; // terminate at \r
(gdb) 
60	                printf("Next message: %s\n", buf);
(gdb) 
Next message: A stitch in time
71	                memset(buf, 0, where - 1);
(gdb) 
72	                memmove(buf, (buf + where), inbuf - where);
(gdb) 
74	                inbuf = inbuf - where;
(gdb) 
51	            while ((where = find_network_newline(buf, inbuf)) > 0) {
(gdb) 
77	            after = (buf + inbuf);
(gdb) 
78	            room =  sizeof(buf) - inbuf;
(gdb) 
39	        while ((nbytes = read(fd, after, room)) > 0) {
(gdb) 
81	        close(fd);
(gdb) exit[K[K[K[K
27	        int fd = accept_connection(listenfd);
(gdb) exit
Undefined command: "exit".  Try "help".
(gdb) q
A debugging session is active.

	Inferior 1 [process 20430] will be killed.

Quit anyway? (y or n) y
[1m[3m%[23m[1m[0m                                                                               k..hanronn/Lab10\[0m[23m[24m[JÎ» ~/coding/csc209/chanronn/Lab10/ [32mmaster*[00m [00m[K[?1h=[?2004heexit[?1l>[?2004l
kexit\
Script done on 2018-11-21 23:21:10-05:00
